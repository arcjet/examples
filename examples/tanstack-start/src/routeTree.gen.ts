/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SignupIndexRouteImport } from './routes/signup/index'
import { Route as SensitiveInfoIndexRouteImport } from './routes/sensitive-info/index'
import { Route as RateLimitingIndexRouteImport } from './routes/rate-limiting/index'
import { Route as BotsIndexRouteImport } from './routes/bots/index'
import { Route as AttackIndexRouteImport } from './routes/attack/index'
import { Route as SignupSubmittedRouteImport } from './routes/signup/submitted'
import { Route as SensitiveInfoSubmittedRouteImport } from './routes/sensitive-info/submitted'
import { ServerRoute as BotsTestServerRouteImport } from './routes/bots/test'
import { ServerRoute as AttackTestServerRouteImport } from './routes/attack/test'

const rootServerRouteImport = createServerRootRoute()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupIndexRoute = SignupIndexRouteImport.update({
  id: '/signup/',
  path: '/signup/',
  getParentRoute: () => rootRouteImport,
} as any)
const SensitiveInfoIndexRoute = SensitiveInfoIndexRouteImport.update({
  id: '/sensitive-info/',
  path: '/sensitive-info/',
  getParentRoute: () => rootRouteImport,
} as any)
const RateLimitingIndexRoute = RateLimitingIndexRouteImport.update({
  id: '/rate-limiting/',
  path: '/rate-limiting/',
  getParentRoute: () => rootRouteImport,
} as any)
const BotsIndexRoute = BotsIndexRouteImport.update({
  id: '/bots/',
  path: '/bots/',
  getParentRoute: () => rootRouteImport,
} as any)
const AttackIndexRoute = AttackIndexRouteImport.update({
  id: '/attack/',
  path: '/attack/',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupSubmittedRoute = SignupSubmittedRouteImport.update({
  id: '/signup/submitted',
  path: '/signup/submitted',
  getParentRoute: () => rootRouteImport,
} as any)
const SensitiveInfoSubmittedRoute = SensitiveInfoSubmittedRouteImport.update({
  id: '/sensitive-info/submitted',
  path: '/sensitive-info/submitted',
  getParentRoute: () => rootRouteImport,
} as any)
const BotsTestServerRoute = BotsTestServerRouteImport.update({
  id: '/bots/test',
  path: '/bots/test',
  getParentRoute: () => rootServerRouteImport,
} as any)
const AttackTestServerRoute = AttackTestServerRouteImport.update({
  id: '/attack/test',
  path: '/attack/test',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/sensitive-info/submitted': typeof SensitiveInfoSubmittedRoute
  '/signup/submitted': typeof SignupSubmittedRoute
  '/attack': typeof AttackIndexRoute
  '/bots': typeof BotsIndexRoute
  '/rate-limiting': typeof RateLimitingIndexRoute
  '/sensitive-info': typeof SensitiveInfoIndexRoute
  '/signup': typeof SignupIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sensitive-info/submitted': typeof SensitiveInfoSubmittedRoute
  '/signup/submitted': typeof SignupSubmittedRoute
  '/attack': typeof AttackIndexRoute
  '/bots': typeof BotsIndexRoute
  '/rate-limiting': typeof RateLimitingIndexRoute
  '/sensitive-info': typeof SensitiveInfoIndexRoute
  '/signup': typeof SignupIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/sensitive-info/submitted': typeof SensitiveInfoSubmittedRoute
  '/signup/submitted': typeof SignupSubmittedRoute
  '/attack/': typeof AttackIndexRoute
  '/bots/': typeof BotsIndexRoute
  '/rate-limiting/': typeof RateLimitingIndexRoute
  '/sensitive-info/': typeof SensitiveInfoIndexRoute
  '/signup/': typeof SignupIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/sensitive-info/submitted'
    | '/signup/submitted'
    | '/attack'
    | '/bots'
    | '/rate-limiting'
    | '/sensitive-info'
    | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/sensitive-info/submitted'
    | '/signup/submitted'
    | '/attack'
    | '/bots'
    | '/rate-limiting'
    | '/sensitive-info'
    | '/signup'
  id:
    | '__root__'
    | '/'
    | '/sensitive-info/submitted'
    | '/signup/submitted'
    | '/attack/'
    | '/bots/'
    | '/rate-limiting/'
    | '/sensitive-info/'
    | '/signup/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SensitiveInfoSubmittedRoute: typeof SensitiveInfoSubmittedRoute
  SignupSubmittedRoute: typeof SignupSubmittedRoute
  AttackIndexRoute: typeof AttackIndexRoute
  BotsIndexRoute: typeof BotsIndexRoute
  RateLimitingIndexRoute: typeof RateLimitingIndexRoute
  SensitiveInfoIndexRoute: typeof SensitiveInfoIndexRoute
  SignupIndexRoute: typeof SignupIndexRoute
}
export interface FileServerRoutesByFullPath {
  '/attack/test': typeof AttackTestServerRoute
  '/bots/test': typeof BotsTestServerRoute
}
export interface FileServerRoutesByTo {
  '/attack/test': typeof AttackTestServerRoute
  '/bots/test': typeof BotsTestServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/attack/test': typeof AttackTestServerRoute
  '/bots/test': typeof BotsTestServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/attack/test' | '/bots/test'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/attack/test' | '/bots/test'
  id: '__root__' | '/attack/test' | '/bots/test'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  AttackTestServerRoute: typeof AttackTestServerRoute
  BotsTestServerRoute: typeof BotsTestServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup/': {
      id: '/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sensitive-info/': {
      id: '/sensitive-info/'
      path: '/sensitive-info'
      fullPath: '/sensitive-info'
      preLoaderRoute: typeof SensitiveInfoIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/rate-limiting/': {
      id: '/rate-limiting/'
      path: '/rate-limiting'
      fullPath: '/rate-limiting'
      preLoaderRoute: typeof RateLimitingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/bots/': {
      id: '/bots/'
      path: '/bots'
      fullPath: '/bots'
      preLoaderRoute: typeof BotsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/attack/': {
      id: '/attack/'
      path: '/attack'
      fullPath: '/attack'
      preLoaderRoute: typeof AttackIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup/submitted': {
      id: '/signup/submitted'
      path: '/signup/submitted'
      fullPath: '/signup/submitted'
      preLoaderRoute: typeof SignupSubmittedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sensitive-info/submitted': {
      id: '/sensitive-info/submitted'
      path: '/sensitive-info/submitted'
      fullPath: '/sensitive-info/submitted'
      preLoaderRoute: typeof SensitiveInfoSubmittedRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/bots/test': {
      id: '/bots/test'
      path: '/bots/test'
      fullPath: '/bots/test'
      preLoaderRoute: typeof BotsTestServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/attack/test': {
      id: '/attack/test'
      path: '/attack/test'
      fullPath: '/attack/test'
      preLoaderRoute: typeof AttackTestServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SensitiveInfoSubmittedRoute: SensitiveInfoSubmittedRoute,
  SignupSubmittedRoute: SignupSubmittedRoute,
  AttackIndexRoute: AttackIndexRoute,
  BotsIndexRoute: BotsIndexRoute,
  RateLimitingIndexRoute: RateLimitingIndexRoute,
  SensitiveInfoIndexRoute: SensitiveInfoIndexRoute,
  SignupIndexRoute: SignupIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  AttackTestServerRoute: AttackTestServerRoute,
  BotsTestServerRoute: BotsTestServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
